-- SENTENCIA PARA ENCONTRAR LOS USUARIOS QUE HAN HECHO AL MENOS UNA RESERVA EN EL RANGO DE FECHAS PARA UN ALOJAMIENTO
SELECT * 
FROM (SELECT RESERVAS.ID AS IDRESERVA, COBRO, ESTADO, FECHAINICIO, FECHAFIN, FECHAREALIZACION, IDCLIENTE, COLECTIVA, CLIENTES.ID, CEDULA, NOMBRE, EDAD, TELEFONO
        FROM RESERVAS INNER JOIN CLIENTES ON CLIENTES.ID = RESERVAS.IDCLIENTE 
        WHERE FECHAREALIZACION >='01/01/2018' AND FECHAREALIZACION <= '31/12/2018') T1
     INNER JOIN        
     (SELECT *
        FROM OFERTASRESERVAS INNER JOIN OFERTAS ON OFERTAS.ID = OFERTASRESERVAS.IDOFERTA
        WHERE OFERTAS.IDALOJAMIENTO = 4) T2
     ON T1.IDRESERVA = T2.IDRESERVA;
        
                
-- SENTENCIA PARA ENCONTRAR LOS USUARIOS QUE NO HAN HECHO NI UNA RESERVA EN ESAS FECHAS--              
SELECT *
FROM CLIENTES, RESERVAS 
WHERE CLIENTES.id NOT IN 
                  (SELECT IDCLIENTE 
                    FROM (SELECT RESERVAS.ID AS IDRESERVA, COBRO, ESTADO, FECHAINICIO, FECHAFIN, FECHAREALIZACION, IDCLIENTE, COLECTIVA, CLIENTES.ID, CEDULA, NOMBRE, EDAD, TELEFONO
                            FROM RESERVAS INNER JOIN CLIENTES ON CLIENTES.ID = RESERVAS.IDCLIENTE 
                            WHERE FECHAREALIZACION >='01/01/2018' AND FECHAREALIZACION <= '31/12/2018') T1
                         INNER JOIN        
                         (SELECT *
                            FROM OFERTASRESERVAS INNER JOIN OFERTAS ON OFERTAS.ID = OFERTASRESERVAS.IDOFERTA
                            WHERE OFERTAS.IDALOJAMIENTO = 4) T2
                         ON T1.IDRESERVA = T2.IDRESERVA
                  ) 
AND CLIENTES.ID = RESERVAS.IDCLIENTE;
                
-- SENTENCIA PARA ENCONTRAR LA OFERTA CON MAYOR OCUPACION--
SELECT * FROM 
    (SELECT COUNT(OFERTASRESERVAS.IDRESERVA), OFERTAS.ID, OFERTAS.IDOPERADOR, OFERTAS.IDALOJAMIENTO, OFERTAS.COSTO, OFERTAS.ESTADO, OFERTAS.NOMBRE
    FROM OFERTASRESERVAS, OFERTAS
    WHERE OFERTASRESERVAS.IDOFERTA = OFERTAS.ID 
    group by OFERTAS.ID, OFERTAS.IDOPERADOR, OFERTAS.IDALOJAMIENTO, OFERTAS.COSTO, OFERTAS.ESTADO, OFERTAS.NOMBRE
    order by COUNT(OFERTASRESERVAS.IDRESERVA) DESC), ALOJAMIENTOS 
WHERE ROWNUM = 1 AND IDALOJAMIENTO = ALOJAMIENTOS.ID;

-- SENTENCIA PARA ENCONTRAR LAS OFERTAS CON MENOR OCUPACION--
SELECT * FROM 
    (SELECT COUNT(OFERTASRESERVAS.IDRESERVA), OFERTAS.ID, OFERTAS.IDOPERADOR, OFERTAS.IDALOJAMIENTO, OFERTAS.COSTO, OFERTAS.ESTADO, OFERTAS.NOMBRE
        FROM OFERTASRESERVAS, OFERTAS
        WHERE OFERTASRESERVAS.IDOFERTA = OFERTAS.ID 
        group by OFERTAS.ID, OFERTAS.IDOPERADOR, OFERTAS.IDALOJAMIENTO, OFERTAS.COSTO, OFERTAS.ESTADO, OFERTAS.NOMBRE
        order by COUNT(OFERTASRESERVAS.IDRESERVA) ASC), ALOJAMIENTOS 
WHERE ROWNUM = 1 AND IDALOJAMIENTO = ALOJAMIENTOS.ID;

-- SENTENCIA PARA ENCONTRAR LOS OPERADORES MÁS SOLICITADOS--
SELECT * FROM 
    (SELECT COUNT(OFERTASRESERVAS.IDRESERVA), OFERTAS.IDOPERADOR
    FROM OFERTASRESERVAS, OFERTAS
    WHERE OFERTASRESERVAS.IDOFERTA = OFERTAS.ID 
    group by OFERTAS.IDOPERADOR
    order by COUNT(OFERTASRESERVAS.IDRESERVA) DESC), OPERADORES 
WHERE IDOPERADOR = OPERADORES.ID;

-- SENTENCIA PARA ENCONTRAR LOS OPERADORES MENOS SOLICITADOS-- revisar
SELECT * FROM 
    (SELECT COUNT(OFERTASRESERVAS.IDRESERVA), OFERTAS.IDOPERADOR
    FROM OFERTASRESERVAS, OFERTAS
    WHERE OFERTASRESERVAS.IDOFERTA = OFERTAS.ID 
    group by OFERTAS.IDOPERADOR
    order by COUNT(OFERTASRESERVAS.IDRESERVA) ASC), OPERADORES 
WHERE IDOPERADOR = OPERADORES.ID;

-- SENTENCIA PARA CONSULTAR LOS BUENOS CLIENTES A PARTIR DE LA UNIÓN ENTRE LOS QUE HACEN --

----HALLAR LA RESERVA MÁS ANTIGUA----
    SELECT FECHAREALIZACION 
    FROM RESERVAS
    WHERE ROWNUM =1
    ORDER BY FECHAREALIZACION ASC;
        
----HALLAR LOS CLIENTES QUE HACEN RESERVAS CARAS----
------HALLAR LAS RESERVAS CARAS Y QUIÉNES LAS HAN HECHO
        SELECT count(*), clientes.id as cliente
        FROM CLIENTES INNER JOIN RESERVAS ON CLIENTES.ID = RESERVAS.IDCLIENTE
        WHERE RESERVAS.COBRO >= 150
        GROUP BY clientes.id;
------VERIFICAR QUE TODAS LAS RESERVAS DE LOS CLIENTES SEAN CARAS
        SELECT * 
        FROM(SELECT COUNT(*) AS RESERVASTOTALES, CLIENTES.ID AS CLIENTE, CLIENTES.CEDULA, CLIENTES.EDAD, CLIENTES.NOMBRE, CLIENTES.TELEFONO
                FROM CLIENTES INNER JOIN RESERVAS ON CLIENTES.ID = RESERVAS.IDCLIENTE 
                GROUP BY CLIENTES.ID, CLIENTES.CEDULA, CLIENTES.EDAD, CLIENTES.NOMBRE, CLIENTES.TELEFONO)
            NATURAL INNER JOIN 
            ( SELECT count(*) AS RESERVASCARAS, clientes.id as cliente, CLIENTES.CEDULA, CLIENTES.EDAD, CLIENTES.NOMBRE, CLIENTES.TELEFONO
                FROM CLIENTES INNER JOIN RESERVAS ON CLIENTES.ID = RESERVAS.IDCLIENTE
                WHERE RESERVAS.COBRO >= 150
                GROUP BY clientes.id, CLIENTES.CEDULA, CLIENTES.EDAD, CLIENTES.NOMBRE, CLIENTES.TELEFONO)
        WHERE RESERVASTOTALES = RESERVASCARAS;
--------------------------------------------------------

----HALLAR LOS CLIENTES QUE RESERVAN SUITES----
------HALLAR LAS RESERVAS DE SUITES Y QUIÉNES LAS HAN HECHO
SELECT *
FROM        (SELECT * 
             FROM OFERTAS INNER JOIN OFERTASRESERVAS ON OFERTAS.ID = OFERTASRESERVAS.IDOFERTA)
      NATURAL INNER JOIN 
            (SELECT HOTELES.ID AS IDALOJAMIENTO, HABSHOTEL.CATEGORIA, HABSHOTEL.ID AS IDHABITACION 
             FROM HABSHOTEL INNER JOIN HOTELES ON IDHOTEL = HOTELES.ID
             WHERE HABSHOTEL.CATEGORIA = 'suite');

--------------------------------------------------------

